{"version":3,"sources":["webpack://PagerDuty/./src/common.ts","webpack://PagerDuty/./src/api.ts","webpack://PagerDuty/./src/events.ts","webpack://PagerDuty/webpack/bootstrap","webpack://PagerDuty/webpack/startup","webpack://PagerDuty/webpack/runtime/define property getters","webpack://PagerDuty/webpack/runtime/hasOwnProperty shorthand","webpack://PagerDuty/webpack/runtime/make namespace object"],"names":["request","url","options","params","timeout","rest","applyParams","URL","toString","applyTimeout","fetch","headers","Headers","combinedParams","searchParams","Object","keys","key","append","search","init","controller","AbortController","setTimeout","abort","signal","api","endpoint","partialParams","partial","shorthand","method","get","post","put","patch","all","partialCall","server","token","version","data","config","Accept","Authorization","includes","toUpperCase","body","JSON","stringify","apiRequest","replace","then","response","allInner","responses","length","next","concat","Promise","resolve","apiResponse","resource","match","resourceKey","json","undefined","offset","isOffsetPagination","more","limit","cursor","isCursorPagination","nextFunc","event","type","eventFetch","action","trigger","acknowledge","change","resp","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","d","definition","o","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value"],"mappings":"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","file":"pdjs.js","sourcesContent":["/* webpack-strip-block:removed */\n\nconst VERSION = '0.0.1';\n\nexport interface RequestOptions extends RequestInit {\n  params?: Record<string, string>;\n  timeout?: number;\n}\n\n// TODO: Retries.\n// TODO: Backoff.\nexport function request(\n  url: string | URL,\n  options: RequestOptions = {}\n): Promise<Response> {\n  const {params, timeout, ...rest} = options;\n\n  url = new URL(url.toString());\n\n  url = applyParams(url, params);\n  options = applyTimeout(options, timeout);\n\n  return fetch(url.toString(), {\n    ...rest,\n    headers: new Headers({\n      'Content-Type': 'application/json; charset=utf-8',\n      /* webpack-strip-block:removed */\n      ...rest.headers,\n    }),\n  });\n}\n\nfunction userAgentHeader(): object {\n  if (isBrowser) return {};\n\n  return {\n    'User-Agent': `pdjs/${VERSION} (${process.version}/${process.platform})`,\n  };\n}\n\nfunction applyParams(url: URL, params?: Record<string, string>): URL {\n  if (!params) return url;\n\n  const combinedParams = url.searchParams;\n\n  for (const key of Object.keys(params)) {\n    combinedParams.append(key, params[key]);\n  }\n\n  url.search = combinedParams.toString();\n  return url;\n}\n\nfunction applyTimeout(init: RequestOptions, timeout?: number): RequestOptions {\n  if (!timeout) return init;\n\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), timeout);\n\n  return {\n    ...init,\n    signal: controller.signal,\n  };\n}\n","import {request, RequestOptions} from './common';\n\nexport interface ShorthandCall {\n  (res: string, params?: Partial<APIParams>): APIPromise;\n}\n\nexport interface PartialCall {\n  (params: APIParams): APIPromise;\n  (params: Partial<APIParams>): PartialCall;\n  get: ShorthandCall;\n  post: ShorthandCall;\n  put: ShorthandCall;\n  patch: ShorthandCall;\n  delete: ShorthandCall;\n  all: (params: APIParams) => Promise<APIResponse[]>;\n}\n\nexport type APIParams = RequestOptions & {\n  endpoint?: string;\n  url?: string;\n  data?: object;\n  token?: string;\n  server?: string;\n  version?: number;\n} & ({endpoint: string} | {url: string});\n\nexport type APIPromise = Promise<APIResponse>;\n\nexport interface APIResponse extends Response {\n  data: any;\n  resource: any;\n  response: Response;\n  next?: () => APIPromise;\n}\n\nexport function api(params: APIParams): APIPromise;\nexport function api(params: Partial<APIParams>): PartialCall;\nexport function api(params: Partial<APIParams>): APIPromise | PartialCall {\n  // If the params don't include `endpoint` treat it as a partial\n  // application.\n  if (!params.endpoint && !params.url) {\n    return partialCall(params);\n  }\n\n  const {\n    endpoint,\n    server = 'api.pagerduty.com',\n    token,\n    url,\n    version = 2,\n    data,\n    ...rest\n  } = params;\n\n  const config: RequestOptions = {\n    method: 'GET',\n    ...rest,\n    headers: {\n      Accept: `application/vnd.pagerduty+json;version=${version}`,\n      Authorization: `Token token=${token!}`,\n      ...rest.headers,\n    },\n  };\n\n  // Allow `data` for `params` for requests without bodies.\n  if (isReadonlyRequest(config.method!) && data) {\n    config.params = config.params ?? (data as Record<string, string>);\n  } else {\n    config.body = JSON.stringify(data);\n  }\n\n  return apiRequest(\n    url ?? `https://${server}/${endpoint!.replace(/^\\/+/, '')}`,\n    config\n  );\n}\n\nexport function all(params: APIParams): Promise<APIResponse[]> {\n  return (api(params) as APIPromise).then(response => allInner([response]));\n}\n\nfunction allInner(responses: APIResponse[]): Promise<APIResponse[]> {\n  const response = responses[responses.length - 1];\n\n  if (!response.next) {\n    return Promise.resolve(responses);\n  }\n\n  return response.next().then(response => allInner(responses.concat([response])));\n}\n\nfunction apiRequest(url: string, options: RequestOptions): APIPromise {\n  return request(url, options).then(\n    (response: Response): APIPromise => {\n      const apiResponse = response as APIResponse;\n      const resource = resourceKey(url);\n      return response.json().then(\n        (data): APIResponse => {\n          apiResponse.next = nextFunc(url, options, data);\n          apiResponse.data = data;\n          apiResponse.resource = resource ? data[resource] : null;\n          apiResponse.response = response;\n          return apiResponse;\n        }\n      );\n    }\n  );\n}\n\nfunction resourceKey(url: string) {\n  let resource = url.match(/.+.com\\/(?<resource>[\\w]+)/);\n  if (resource) {\n    return resource[1];\n  }\n  return null;\n}\n\nfunction isReadonlyRequest(method: string) {\n  return !['PUT', 'POST', 'DELETE', 'PATCH'].includes(\n    method.toUpperCase() ?? 'GET'\n  );\n}\n\ninterface OffsetPagination {\n  type: 'offset';\n  more?: boolean;\n  offset?: number;\n  limit?: number;\n}\n\ninterface CursorPagination {\n  type: 'cursor';\n  cursor?: string;\n  limit?: number;\n}\n\nfunction isOffsetPagination(data: OffsetPagination | CursorPagination): data is OffsetPagination {\n  if ((data as OffsetPagination).offset !== undefined) {\n    return true\n  }\n  return false\n}\n\nfunction isCursorPagination(data: OffsetPagination | CursorPagination): data is CursorPagination {\n  if ((data as CursorPagination).cursor !== undefined) {\n    return true\n  }\n  return false\n}\n\nfunction nextFunc(\n  url: string,\n  options: RequestOptions,\n  data: OffsetPagination | CursorPagination\n) {\n  if (isOffsetPagination(data)) {\n    if (data?.more && typeof data.offset !== undefined && data.limit) {\n      return () =>\n        apiRequest(url, {\n          ...options,\n          params: {\n            ...options.params,\n            limit: data.limit!.toString(),\n            offset: (data.limit! + data.offset!).toString(),\n          },\n        });\n    }\n  } else if (isCursorPagination(data)) {\n    if (data?.cursor) {\n      return () =>\n        apiRequest(url, {\n          ...options,\n          params: {\n            ...options.params,\n            cursor: data.cursor!,\n            limit: data.limit!.toString(),\n          }\n        })\n    }\n  }\n\n  return undefined;\n}\n\nfunction partialCall(params: Partial<APIParams>) {\n  const partialParams = params;\n  const partial = ((params: Partial<APIParams>) =>\n    api({...partialParams, ...params})) as PartialCall;\n\n  const shorthand = (method: string) => (\n    endpoint: string,\n    params?: Partial<APIParams>\n  ): APIPromise =>\n    api({endpoint, method, ...partialParams, ...params}) as APIPromise;\n\n  partial.get = shorthand('get');\n  partial.post = shorthand('post');\n  partial.put = shorthand('put');\n  partial.patch = shorthand('patch');\n  partial.delete = shorthand('delete');\n\n  partial.all = (params: APIParams) => all(params);\n\n  return partial;\n}\n","import {request, RequestOptions} from './common';\n\nexport type Action = 'trigger' | 'acknowledge' | 'resolve';\n\nexport type EventPromise = Promise<EventResponse>;\n\nexport interface EventResponse extends Response {\n  data: any;\n}\n\nexport type Severity = 'critical' | 'error' | 'warning' | 'info';\n\nexport interface Image {\n  src: string;\n  href?: string;\n  alt?: string;\n}\n\nexport interface Link {\n  href: string;\n  text?: string;\n}\n\nexport interface EventPayloadV2 {\n  routing_key: string;\n  event_action: Action;\n  dedup_key?: string;\n  payload: {\n    summary: string;\n    source: string;\n    severity: Severity;\n    timestamp?: string;\n    component?: string;\n    group?: string;\n    class?: string;\n    custom_details?: object;\n  };\n  images?: Array<Image>;\n  links?: Array<Link>;\n}\n\nexport interface EventParams extends RequestOptions {\n  data: EventPayloadV2;\n  type?: string;\n  server?: string;\n}\n\nexport interface ChangePayload {\n  routing_key: string;\n  payload: {\n    summary: string;\n    source?: string;\n    timestamp: string;\n    custom_details: object;\n  };\n  links: Array<Link>;\n}\nexport interface ChangeParams extends RequestOptions {\n  data: ChangePayload;\n  server?: string;\n}\n\nexport function event(params: EventParams): EventPromise {\n  const {server = 'events.pagerduty.com', type = 'event', data, ...config} = params;\n\n  let url = `https://${server}/v2/enqueue`\n  if (type === 'change') {\n    url = `https://${server}/v2/change/enqueue`\n  }\n\n  return eventFetch(\n    url,\n    {\n      method: 'POST',\n      body: JSON.stringify(data),\n      ...config,\n    }\n  );\n}\n\nconst shorthand = (action: Action) => (params: EventParams): EventPromise => {\n  const typeField = 'event_action';\n\n  return event({\n    ...params,\n    data: {\n      ...params.data,\n      [typeField]: action,\n    },\n  });\n};\n\nexport const trigger = shorthand('trigger');\nexport const acknowledge = shorthand('acknowledge');\nexport const resolve = shorthand('resolve');\nexport const change = (params: EventParams) => event({...params, type: 'change'});\n\nasync function eventFetch(url: string, options: RequestOptions): EventPromise {\n  const resp = (await request(url, options)) as EventResponse;\n  resp.data = await resp.json();\n  // TODO: Something with the return data data.\n  return resp;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(337);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}